import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Define the paths to your training and testing datasets
train_data_dir = 'C:/Pic/Train/'
test_data_dir = "C:/Pic/Test/"

# Define the image dimensions and other parameters
image_height = 100
image_width = 100
batch_size = 32
num_classes = 10

# Create ImageDataGenerators for training and testing datasets
train_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)

# Load the training dataset and apply data augmentation
train_generator = train_datagen.flow_from_directory(
    train_data_dir,
    target_size=(image_height, image_width),
    batch_size=batch_size,
    class_mode='categorical')

# Load the testing dataset
test_generator = test_datagen.flow_from_directory(
    test_data_dir,
    target_size=(image_height, image_width),
    batch_size=batch_size,
    class_mode='categorical')

# Define the CNN model
model = tf.keras.models.Sequential([
    # Define your layers here
    # ...
])

# Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(train_generator, epochs=10, validation_data=test_generator)

# Evaluate the model
loss, accuracy = model.evaluate(test_generator)
